apply from:'../buildscripts/network.gradle'

def targetFolder = "src/main/assets"
def modelFloatDownloadUrl = "https://tfhub.dev/tensorflow/lite-model/mobilenet_v1_1.0_224/1/metadata/1?lite-format=tflite"
def modelQuantDownloadUrl = "https://tfhub.dev/tensorflow/lite-model/mobilenet_v1_1.0_224_quantized/1/metadata/1?lite-format=tflite"
def modelEfficientNetFloatDownloadUrl = "https://tfhub.dev/tensorflow/lite-model/efficientnet/lite0/fp32/2?lite-format=tflite"
def modelEfficientNetQuantDownloadUrl = "https://tfhub.dev/tensorflow/lite-model/efficientnet/lite0/int8/2?lite-format=tflite"
def modelFloatFile = "mobilenet_v1_1.0_224.tflite"
def modelQuantFile = "mobilenet_v1_1.0_224_quant.tflite"
def modelEfficientNetFloatFile = "efficientnet-lite0-fp32.tflite"
def modelEfficientNetQuantFile = "efficientnet-lite0-int8.tflite"

task downloadModelFloat(type: DownloadUrlTask) {
    sourceUrl = "${modelFloatDownloadUrl}"
    target = file("${targetFolder}/${modelFloatFile}")
}

task downloadModelQuant(type: DownloadUrlTask) {
    sourceUrl = "${modelQuantDownloadUrl}"
    target = file("${targetFolder}/${modelQuantFile}")
}

task downloadEfficientNetFloat(type: DownloadUrlTask) {
    sourceUrl = "${modelEfficientNetFloatDownloadUrl}"
    target = file("${targetFolder}/${modelEfficientNetFloatFile}")
}

task downloadEfficientNetQuant(type: DownloadUrlTask) {
    sourceUrl = "${modelEfficientNetQuantDownloadUrl}"
    target = file("${targetFolder}/${modelEfficientNetQuantFile}")
}

task cleanUnusedFiles(type: Delete, dependsOn: ['downloadModelFloat', 'downloadModelQuant', 'downloadEfficientNetFloat', 'downloadEfficientNetQuant']) {
    delete fileTree("${targetFolder}").matching {
        include "*.pb"
        include "*.ckpt.*"
        include "*.pbtxt*"
        include "*.quant_info.*"
        include "*.meta"
    }
}

preBuild.dependsOn downloadModelFloat
preBuild.dependsOn downloadModelQuant
preBuild.dependsOn downloadEfficientNetFloat
preBuild.dependsOn downloadEfficientNetQuant
preBuild.dependsOn cleanUnusedFiles
